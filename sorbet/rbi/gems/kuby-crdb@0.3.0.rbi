# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `kuby-crdb` gem.
# Please instead update this file by running `bin/tapioca gem kuby-crdb`.


# source://kuby-crdb//lib/kuby/crdb.rb#3
# typed: strong
module Kuby
  class << self
    # source://kuby-core/0.20.2/lib/kuby.rb#52
    def define(name, &block); end

    # source://kuby-core/0.20.2/lib/kuby.rb#39
    def definition; end

    # source://kuby-core/0.20.2/lib/kuby.rb#131
    def dependables; end

    # source://kuby-core/0.20.2/lib/kuby.rb#92
    def distros; end

    # source://kuby-core/0.20.2/lib/kuby.rb#139
    def env; end

    # source://kuby-core/0.20.2/lib/kuby.rb#135
    def env=(env_name); end

    # source://kuby-core/0.20.2/lib/kuby.rb#69
    def environment(name = T.unsafe(nil)); end

    # source://kuby-core/0.20.2/lib/kuby.rb#42
    def load!(config_file = T.unsafe(nil)); end

    # source://kuby-core/0.20.2/lib/kuby.rb#145
    def load_rake_tasks!; end

    # source://kuby-core/0.20.2/lib/kuby.rb#100
    def logger; end

    # source://kuby-core/0.20.2/lib/kuby.rb#40
    def logger=(_arg0); end

    # source://kuby-core/0.20.2/lib/kuby.rb#123
    def packages; end

    # source://kuby-core/0.20.2/lib/kuby.rb#96
    def plugins; end

    # source://kuby-core/0.20.2/lib/kuby.rb#80
    def providers; end

    # source://kuby-core/0.20.2/lib/kuby.rb#127
    def register_dependable(name, version_or_callable); end

    # source://kuby-core/0.20.2/lib/kuby.rb#88
    def register_distro(distro_name, distro_klass); end

    # source://kuby-core/0.20.2/lib/kuby.rb#104
    def register_package(package_name, package_def = T.unsafe(nil)); end

    # source://kuby-core/0.20.2/lib/kuby.rb#84
    def register_plugin(*args, **kwargs); end

    # source://kuby-core/0.20.2/lib/kuby.rb#76
    def register_provider(provider_name, provider_klass); end
  end
end

# source://kuby-crdb//lib/kuby/crdb.rb#4
module Kuby::CRDB
  extend ::Kuby::CRDB::Entrypoint
end

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#8
class Kuby::CRDB::APIResourcesError < ::Kuby::CRDB::CRDBError; end

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#6
class Kuby::CRDB::CRDBError < ::StandardError; end

# source://kuby-crdb//lib/kuby/crdb/version.rb#4
Kuby::CRDB::CRDB_OPERATOR_VERSION = T.let(T.unsafe(nil), String)

# source://kuby-crdb//lib/kuby/crdb/dsl.rb#1
module Kuby::CRDB::DSL; end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb.rb#1
module Kuby::CRDB::DSL::CRDB; end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1.rb#1
module Kuby::CRDB::DSL::CRDB::V1alpha1; end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbCluster < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def api_version(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster.rb#29
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def metadata(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def metadata_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster.rb#19
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def spec(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def spec_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def status(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def status_present?; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_list.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def api_version(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def item(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def items; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_list.rb#26
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def metadata(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def metadata_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_list.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def additional_annotations(&block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def additional_args(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def additional_labels(&block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def affinity(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def affinity_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def cache(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def client_tls_secret(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def cockroach_db_version(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def data_store(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def data_store_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def grpc_port(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def http_port(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def image(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def image_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec.rb#82
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def max_sql_memory(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def max_unavailable(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def min_available(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def node_selector(&block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def node_tls_secret(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def nodes(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def pod_env_variable(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def pod_env_variables; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def resources(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def resources_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec.rb#55
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def sql_port(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def tls_enabled(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def toleration(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def tolerations; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def node_affinity(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def node_affinity_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def pod_affinity(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def pod_affinity_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def pod_anti_affinity(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def pod_anti_affinity_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def preferred_during_scheduling_ignored_during_executions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def required_during_scheduling_ignored_during_execution(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def required_during_scheduling_ignored_during_execution_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def preference(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def preference_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def weight(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8d2a4565.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8d2a4565.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_field(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_fields; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8d2a4565.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_f85e726e.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_f85e726e.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_f85e726e.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8b78f2b1.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8b78f2b1.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_exec_8b78f2b1.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.rb#19
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def node_selector_term(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def node_selector_terms; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.rb#13
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_48b642ac.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_48b642ac.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_field(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_fields; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_48b642ac.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_bb695e66.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_bb695e66.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_bb695e66.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_05ab423d.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_05ab423d.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execu_05ab423d.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def preferred_during_scheduling_ignored_during_executions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def required_during_scheduling_ignored_during_executions; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execution.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def pod_affinity_term(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execution.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def weight(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_89c72c0d.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_89c72c0d.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def label_selector(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def label_selector_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def namespaces(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_89c72c0d.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def topology_key(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_c9250bb0.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_c9250bb0.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_c9250bb0.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_17815603.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_17815603.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execu_17815603.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execution.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def label_selector(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def label_selector_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def namespaces(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execution.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def topology_key(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_68d750ca.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_68d750ca.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_68d750ca.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_288baf8e.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_288baf8e.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_affinity_required_during_scheduling_ignored_during_execut_288baf8e.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def preferred_during_scheduling_ignored_during_executions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def required_during_scheduling_ignored_during_executions; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during_execution.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def pod_affinity_term(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during_execution.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def weight(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__ffa31ee1.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__ffa31ee1.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def label_selector(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def label_selector_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def namespaces(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__ffa31ee1.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def topology_key(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__7005510b.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__7005510b.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__7005510b.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__eef14bfd.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__eef14bfd.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_preferred_during_scheduling_ignored_during__eef14bfd.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_execution.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_execution.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def label_selector(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def label_selector_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def namespaces(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_execution.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def topology_key(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_a054a9d0.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_a054a9d0.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_a054a9d0.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_e3e2a2ff.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_e3e2a2ff.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_affinity_pod_anti_affinity_required_during_scheduling_ignored_during_e_e3e2a2ff.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStore < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def host_path(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def host_path_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def pvc(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def pvc_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def supports_auto_resize(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_host_path.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStoreHostPath < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_host_path.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def path(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_host_path.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def type(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvc < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def source(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def source_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def spec(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def spec_present?; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_source.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSource < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def claim_name(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_source.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def read_only(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_source.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def access_modes(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def data_source(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def data_source_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec.rb#37
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def resources(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def resources_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def selector(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def selector_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec.rb#25
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def storage_class_name(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def volume_mode(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def volume_name(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_data_source.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecDataSource < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def api_group(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def kind(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_data_source.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def name(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_data_source.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_resources.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecResources < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_resources.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def limits(&block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def requests(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_resources.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def match_expression(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def match_expressions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector_match_expressions.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector_match_expressions.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_data_store_pvc_spec_selector_match_expressions.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def values(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_image.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecImage < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_image.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def name(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def pull_policy(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def pull_secret(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_image.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariables < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def name(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def value(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def value_from(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def value_from_present?; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFrom < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def config_map_key_ref(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def config_map_key_ref_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def field_ref(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def field_ref_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from.rb#28
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def resource_field_ref(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def resource_field_ref_present?; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#32
  def secret_key_ref(*args, &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#44
  sig { returns(T::Boolean) }
  def secret_key_ref_present?; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from.rb#19
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_config_map_key_ref.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromConfigMapKeyRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_config_map_key_ref.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def name(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def optional(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_config_map_key_ref.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_field_ref.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromFieldRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def api_version(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def field_path(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_field_ref.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_field_ref.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_resource_field_ref.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromResourceFieldRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def container_name(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_resource_field_ref.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def resource(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_resource_field_ref.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_secret_key_ref.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromSecretKeyRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_secret_key_ref.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def name(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def optional(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_pod_env_variables_value_from_secret_key_ref.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_resources.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecResources < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_resources.rb#22
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def limits(&block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#52
  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def requests(&block); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_resources.rb#15
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_tolerations.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecTolerations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def effect(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def key(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_tolerations.rb#31
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def operator(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_spec_tolerations.rb#21
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def toleration_seconds(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def value(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def cluster_status(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def condition(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def conditions; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def crdbcontainerimage(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status.rb#31
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#71
  def operator_action(elem_name = T.unsafe(nil), &block); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#97
  def operator_actions; end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status.rb#21
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def version(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_conditions.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_conditions.rb#25
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def last_transition_time(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_conditions.rb#17
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def status(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def type(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_operator_actions.rb#8
class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatusOperatorActions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_operator_actions.rb#28
  sig { returns(Symbol) }
  def kind_sym; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def last_transition_time(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def message(*args); end

  # source://kuby-crdb//lib/kuby/crdb/dsl/crdb/v1alpha1/crdb_cluster_status_operator_actions.rb#19
  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def status(*args); end

  # source://kube-dsl/0.8.0/lib/kube-dsl/value_fields.rb#17
  def type(*args); end
end

# source://kuby-crdb//lib/kuby/crdb/entrypoint.rb#1
module Kuby::CRDB::Entrypoint
  # source://kuby-crdb//lib/kuby/crdb/entrypoint.rb#9
  def crdb_cluster(&block); end

  # source://kuby-crdb//lib/kuby/crdb/entrypoint.rb#2
  def crdb_cluster_list(&block); end
end

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#7
class Kuby::CRDB::OperatorDeployError < ::Kuby::CRDB::CRDBError; end

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#10
class Kuby::CRDB::Plugin < ::Kuby::Plugin
  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#24
  def setup; end

  private

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#134
  def find_operator_rs(depl); end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#41
  def install_operator; end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#151
  def kubernetes_cli; end

  # @return [Boolean]
  #
  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#146
  def operator_deployed?; end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#126
  def operator_deployment; end

  # @return [Boolean]
  #
  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#88
  def operator_ready?; end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#155
  def provider; end

  # @return [Boolean]
  #
  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#112
  def rs_ready?(rs); end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#46
  def upgrade_operator; end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#68
  def wait_for_api_resources; end

  # source://kuby-crdb//lib/kuby/crdb/plugin.rb#50
  def wait_for_operator; end
end

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#11
Kuby::CRDB::Plugin::CRD_URL = T.let(T.unsafe(nil), String)

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#13
Kuby::CRDB::Plugin::NAMESPACE = T.let(T.unsafe(nil), String)

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#14
Kuby::CRDB::Plugin::OPERATOR_DEPLOYMENT_NAME = T.let(T.unsafe(nil), String)

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#12
Kuby::CRDB::Plugin::OPERATOR_URL = T.let(T.unsafe(nil), String)

# source://kuby-crdb//lib/kuby/crdb/plugin.rb#18
Kuby::CRDB::Plugin::REPLICA_SET_MATCH_LABELS = T.let(T.unsafe(nil), Hash)

# seconds
#
# source://kuby-crdb//lib/kuby/crdb/plugin.rb#15
Kuby::CRDB::Plugin::WAIT_INTERVAL = T.let(T.unsafe(nil), Integer)

# seconds
#
# source://kuby-crdb//lib/kuby/crdb/plugin.rb#16
Kuby::CRDB::Plugin::WAIT_MAX = T.let(T.unsafe(nil), Integer)

# source://kuby-crdb//lib/kuby/crdb/version.rb#3
Kuby::CRDB::VERSION = T.let(T.unsafe(nil), String)
